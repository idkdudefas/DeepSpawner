-- Enhanced Loading Screen Script with Mobile Proximity Prompt Auto-Hold
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local StarterGui = game:GetService("StarterGui")
local ProximityPromptService = game:GetService("ProximityPromptService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Variables to track loading state
local isScriptLoading = false
local leaveWarningGui = nil
local retryAttempts = 0
local maxRetries = 3
local keySequenceActive = false
local eKeyHolding = false
local isMobile = false
local loadingScreenGui = nil

-- Mobile proximity prompt variables
local proximityConnections = {}
local isAutoHoldingPrompts = false
local currentPrompts = {}

-- Function to detect platform (Mobile vs PC)
local function detectPlatform()
    -- Check if touch is enabled (mobile)
    if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled then
        isMobile = true
        print("Platform detected: Mobile")
    else
        isMobile = false
        print("Platform detected: PC")
    end
    
    -- Alternative detection method
    local screenSize = workspace.CurrentCamera.ViewportSize
    if screenSize.X < 1024 or UserInputService.TouchEnabled then
        if not UserInputService.KeyboardEnabled then
            isMobile = true
            print("Platform confirmed: Mobile (Touch enabled, no keyboard)")
        end
    end
    
    return isMobile
end

-- Function to hide all core GUIs (including chat)
local function hideAllCoreGuis()
    pcall(function()
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, false)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
        print("All core GUIs hidden")
    end)
end

-- Function to restore all core GUIs
local function showAllCoreGuis()
    pcall(function()
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, true)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, true)
        print("All core GUIs restored")
    end)
end

-- Function to simulate key presses (PC only)
local function pressKey(keyCode)
    if isMobile then
        print("Key press skipped - Mobile platform detected")
        return
    end
    
    VirtualInputManager:SendKeyEvent(true, keyCode, false, game)
    wait(0.1) -- Brief delay for key press
    VirtualInputManager:SendKeyEvent(false, keyCode, false, game)
end

-- Function to hold E key (PC only)
local function holdEKey()
    if isMobile then
        print("E key hold skipped - Mobile platform detected")
        return
    end
    
    if eKeyHolding then return end -- Prevent multiple holds
    
    eKeyHolding = true
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    print("Holding E key...")
    
    -- Hold E for a specific duration or until manually stopped
    spawn(function()
        wait(10) -- Hold for 10 seconds (adjust as needed)
        if eKeyHolding then
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
            eKeyHolding = false
            print("Released E key")
        end
    end)
end

-- Function to stop holding E key
local function stopHoldingE()
    if isMobile then return end
    
    if eKeyHolding then
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
        eKeyHolding = false
        print("Stopped holding E key")
    end
end

-- MOBILE: Function to automatically hold proximity prompts
local function startMobileProximityHold()
    if not isMobile then return end
    
    if isAutoHoldingPrompts then return end -- Prevent multiple activations
    
    isAutoHoldingPrompts = true
    print("🔥 MOBILE: Starting automatic proximity prompt holding...")
    
    -- Function to check if player is close enough to a proximity prompt
    local function isPlayerNearPrompt(prompt)
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            return false
        end
        
        local part = prompt.Parent
        if not part or not part:IsA("BasePart") then
            return false
        end
        
        local distance = (player.Character.HumanoidRootPart.Position - part.Position).Magnitude
        return distance <= (prompt.MaxActivationDistance or 10)
    end
    
    -- Function to automatically hold a proximity prompt
    local function autoHoldPrompt(prompt)
        if currentPrompts[prompt] then return end -- Already holding this prompt
        
        currentPrompts[prompt] = true
        
        spawn(function()
            print("📱 MOBILE: Auto-holding proximity prompt:", prompt.ActionText or "Unknown")
            
            while isAutoHoldingPrompts and prompt.Parent and isPlayerNearPrompt(prompt) do
                -- Simulate holding the prompt
                if prompt.Enabled and prompt.Parent then
                    -- Try to trigger the prompt using different methods
                    pcall(function()
                        -- Method 1: Fire the prompt's hold event if available
                        if prompt:FindFirstChild("ProximityPromptService") then
                            ProximityPromptService:FireProximityPrompt(prompt)
                        end
                        
                        -- Method 2: Simulate key press for the prompt
                        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
                        wait(0.1)
                        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
                    end)
                    
                    -- Method 3: Direct prompt triggering
                    pcall(function()
                        if prompt.TriggerEnded then
                            prompt.TriggerEnded:Fire(player)
                        end
                        if prompt.Triggered then
                            prompt.Triggered:Fire(player)
                        end
                    end)
                end
                
                wait(0.1) -- Hold interval
            end
            
            currentPrompts[prompt] = nil
            print("📱 MOBILE: Stopped holding proximity prompt:", prompt.ActionText or "Unknown")
        end)
    end
    
    -- Monitor all existing proximity prompts
    local function scanForProximityPrompts()
        for _, descendant in pairs(workspace:GetDescendants()) do
            if descendant:IsA("ProximityPrompt") and descendant.Enabled then
                if isPlayerNearPrompt(descendant) then
                    autoHoldPrompt(descendant)
                end
            end
        end
    end
    
    -- Connect to ProximityPromptService events
    local connection1 = ProximityPromptService.PromptShown:Connect(function(prompt, inputType)
        if isAutoHoldingPrompts then
            wait(0.2) -- Small delay to ensure prompt is fully loaded
            if isPlayerNearPrompt(prompt) then
                autoHoldPrompt(prompt)
            end
        end
    end)
    
    -- Monitor for new proximity prompts being added
    local connection2 = workspace.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("ProximityPrompt") and isAutoHoldingPrompts then
            wait(0.1) -- Small delay
            if descendant.Enabled and isPlayerNearPrompt(descendant) then
                autoHoldPrompt(descendant)
            end
        end
    end)
    
    -- Continuous scanning for proximity prompts
    local connection3 = RunService.Heartbeat:Connect(function()
        if isAutoHoldingPrompts then
            scanForProximityPrompts()
        end
    end)
    
    -- Store connections for cleanup
    proximityConnections = {connection1, connection2, connection3}
    
    -- Initial scan
    scanForProximityPrompts()
end

-- Function to stop mobile proximity hold
local function stopMobileProximityHold()
    if not isMobile then return end
    
    isAutoHoldingPrompts = false
    currentPrompts = {}
    
    -- Disconnect all connections
    for _, connection in pairs(proximityConnections) do
        if connection then
            connection:Disconnect()
        end
    end
    proximityConnections = {}
    
    print("📱 MOBILE: Stopped automatic proximity prompt holding")
end

-- Function to execute key sequence (1, 2, 3, then hold E) - PC only
local function executeKeySequence()
    if isMobile then
        print("Key sequence skipped - Mobile platform detected")
        -- Start mobile proximity holding instead
        startMobileProximityHold()
        return
    end
    
    if keySequenceActive then return end -- Prevent multiple executions
    
    keySequenceActive = true
    print("Starting key sequence: 1, 2, 3, then hold E")
    
    spawn(function()
        -- Wait a moment after loading screen is removed
        wait(2)
        
        -- Press 1
        print("Pressing key: 1")
        pressKey(Enum.KeyCode.One)
        wait(0.5)
        
        -- Press 2
        print("Pressing key: 2")
        pressKey(Enum.KeyCode.Two)
        wait(0.5)
        
        -- Press 3
        print("Pressing key: 3")
        pressKey(Enum.KeyCode.Three)
        wait(0.5)
        
        -- Hold E
        print("Now holding E key")
        holdEKey()
        
        keySequenceActive = false
    end)
end

-- Function to create leave warning
local function createLeaveWarning()
    if leaveWarningGui and leaveWarningGui.Parent then
        return -- Warning already exists
    end
    
    -- Create Warning ScreenGui
    leaveWarningGui = Instance.new("ScreenGui")
    leaveWarningGui.Name = "LeaveWarning"
    leaveWarningGui.ResetOnSpawn = false
    leaveWarningGui.IgnoreGuiInset = true
    leaveWarningGui.DisplayOrder = 999999997
    leaveWarningGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    leaveWarningGui.Parent = playerGui

    -- Warning Background
    local warningBg = Instance.new("Frame")
    warningBg.Name = "WarningBackground"
    warningBg.Size = UDim2.new(1, 0, 1, 0)
    warningBg.Position = UDim2.new(0, 0, 0, 0)
    warningBg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    warningBg.BackgroundTransparency = 0.5
    warningBg.BorderSizePixel = 0
    warningBg.ZIndex = 999999997
    warningBg.Parent = leaveWarningGui

    -- Warning Container
    local warningFrame = Instance.new("Frame")
    warningFrame.Name = "WarningFrame"
    warningFrame.Size = UDim2.new(0, 450, 0, 200)
    warningFrame.Position = UDim2.new(0.5, -225, 0.5, -100)
    warningFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    warningFrame.BorderColor3 = Color3.fromRGB(255, 200, 0)
    warningFrame.BorderSizePixel = 3
    warningFrame.Parent = warningBg

    local warningCorner = Instance.new("UICorner")
    warningCorner.CornerRadius = UDim.new(0, 12)
    warningCorner.Parent = warningFrame

    -- Warning Icon/Title
    local warningIcon = Instance.new("TextLabel")
    warningIcon.Name = "WarningIcon"
    warningIcon.Size = UDim2.new(1, 0, 0, 50)
    warningIcon.Position = UDim2.new(0, 0, 0, 15)
    warningIcon.BackgroundTransparency = 1
    warningIcon.Text = "⚠️ SCRIPT LOADING"
    warningIcon.TextColor3 = Color3.fromRGB(255, 200, 0)
    warningIcon.TextScaled = true
    warningIcon.Font = Enum.Font.GothamBold
    warningIcon.Parent = warningFrame

    -- Warning Message
    local warningMsg = Instance.new("TextLabel")
    warningMsg.Name = "WarningMessage"
    warningMsg.Size = UDim2.new(1, -30, 0, 80)
    warningMsg.Position = UDim2.new(0, 15, 0, 70)
    warningMsg.BackgroundTransparency = 1
    local mobileText = isMobile and "\n📱 Mobile auto-hold is active!" or ""
    warningMsg.Text = "Please be patient!\n\nThe script is currently loading.\nLeaving now may cause errors or incomplete execution." .. mobileText
    warningMsg.TextColor3 = Color3.fromRGB(220, 220, 220)
    warningMsg.TextScaled = true
    warningMsg.Font = Enum.Font.Gotham
    warningMsg.TextWrapped = true
    warningMsg.Parent = warningFrame

    -- OK Button
    local okBtn = Instance.new("TextButton")
    okBtn.Name = "OKButton"
    okBtn.Size = UDim2.new(0, 120, 0, 35)
    okBtn.Position = UDim2.new(0.5, -60, 0, 160)
    okBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
    okBtn.BorderSizePixel = 0
    okBtn.Text = "OK"
    okBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    okBtn.TextScaled = true
    okBtn.Font = Enum.Font.GothamMedium
    okBtn.Parent = warningFrame

    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 6)
    btnCorner.Parent = okBtn

    -- Button hover effect
    okBtn.MouseEnter:Connect(function()
        okBtn.BackgroundColor3 = Color3.fromRGB(90, 90, 110)
    end)
    
    okBtn.MouseLeave:Connect(function()
        okBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
    end)

    -- Close warning when OK is clicked
    okBtn.MouseButton1Click:Connect(function()
        if leaveWarningGui and leaveWarningGui.Parent then
            leaveWarningGui:Destroy()
            leaveWarningGui = nil
        end
    end)

    -- Auto-close after 5 seconds
    spawn(function()
        wait(5)
        if leaveWarningGui and leaveWarningGui.Parent then
            leaveWarningGui:Destroy()
            leaveWarningGui = nil
        end
    end)

    -- Blinking effect for the warning
    spawn(function()
        local alpha = 0
        local direction = 1
        while leaveWarningGui and leaveWarningGui.Parent do
            alpha = alpha + (direction * 0.02)
            if alpha >= 1 then
                alpha = 1
                direction = -1
            elseif alpha <= 0.3 then
                alpha = 0.3
                direction = 1
            end
            
            if warningIcon and warningIcon.Parent then
                warningIcon.TextTransparency = 1 - alpha
            end
            
            wait(0.05)
        end
    end)
end

-- Function to monitor player leaving attempts
local function setupLeaveDetection()
    -- Monitor for ESC key press or leave attempts
    local connection
    connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if isScriptLoading and input.KeyCode == Enum.KeyCode.Escape then
            createLeaveWarning()
        end
        
        -- Allow manual stop of E key holding with X key
        if input.KeyCode == Enum.KeyCode.X and eKeyHolding then
            stopHoldingE()
        end
        
        -- Mobile: Allow manual stop of proximity holding with specific touch pattern
        if isMobile and input.UserInputType == Enum.UserInputType.Touch then
            -- You can add specific touch gestures here to stop proximity holding if needed
        end
    end)
    
    -- Also monitor for GUI leave attempts
    local menuConnection
    menuConnection = GuiService.MenuOpened:Connect(function()
        if isScriptLoading then
            createLeaveWarning()
        end
    end)
    
    -- Clean up connections when script finishes loading
    spawn(function()
        while isScriptLoading do
            wait(1)
        end
        
        if connection then
            connection:Disconnect()
        end
        if menuConnection then
            menuConnection:Disconnect()
        end
        
        -- Stop mobile proximity holding when script finishes
        if isMobile then
            stopMobileProximityHold()
        end
    end)
end

-- Function to create stylish retry screen
local function createRetryScreen(errorMessage, onRetry, onCancel)
    -- Create Retry ScreenGui
    local retryGui = Instance.new("ScreenGui")
    retryGui.Name = "RetryScreen"
    retryGui.ResetOnSpawn = false
    retryGui.IgnoreGuiInset = true
    retryGui.DisplayOrder = 999999998
    retryGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    retryGui.Parent = playerGui

    -- Background with gradient
    local retryBg = Instance.new("Frame")
    retryBg.Name = "RetryBackground"
    retryBg.Size = UDim2.new(1, 0, 1, 0)
    retryBg.Position = UDim2.new(0, 0, 0, 0)
    retryBg.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
    retryBg.BorderSizePixel = 0
    retryBg.ZIndex = 999999998
    retryBg.Parent = retryGui

    -- Add gradient background
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 25)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(25, 15, 35)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 25, 45))
    }
    gradient.Rotation = 45
    gradient.Parent = retryBg

    -- Main Container
    local retryFrame = Instance.new("Frame")
    retryFrame.Name = "RetryFrame"
    retryFrame.Size = UDim2.new(0, 600, 0, 400)
    retryFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    retryFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
    retryFrame.BorderSizePixel = 0
    retryFrame.Parent = retryBg

    -- Add glow effect
    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = UDim.new(0, 20)
    frameCorner.Parent = retryFrame

    local frameStroke = Instance.new("UIStroke")
    frameStroke.Color = Color3.fromRGB(100, 150, 255)
    frameStroke.Thickness = 2
    frameStroke.Transparency = 0.3
    frameStroke.Parent = retryFrame

    -- Animated glow effect
    spawn(function()
        local glowTween = TweenService:Create(frameStroke, 
            TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
            {Transparency = 0.7}
        )
        glowTween:Play()
    end)

    -- Error Icon
    local errorIcon = Instance.new("TextLabel")
    errorIcon.Name = "ErrorIcon"
    errorIcon.Size = UDim2.new(0, 80, 0, 80)
    errorIcon.Position = UDim2.new(0.5, -40, 0, 30)
    errorIcon.BackgroundTransparency = 1
    errorIcon.Text = "⚠️"
    errorIcon.TextColor3 = Color3.fromRGB(255, 150, 100)
    errorIcon.TextScaled = true
    errorIcon.Font = Enum.Font.GothamBold
    errorIcon.Parent = retryFrame

    -- Pulsing animation for icon
    spawn(function()
        local pulseTween = TweenService:Create(errorIcon,
            TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
            {TextTransparency = 0.3}
        )
        pulseTween:Play()
    end)

    -- Title
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, -40, 0, 50)
    titleLabel.Position = UDim2.new(0, 20, 0, 120)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "TELEPORTATION FAILED"
    titleLabel.TextColor3 = Color3.fromRGB(255, 200, 200)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = retryFrame

    -- Error Message
    local errorLabel = Instance.new("TextLabel")
    errorLabel.Name = "ErrorLabel"
    errorLabel.Size = UDim2.new(1, -60, 0, 80)
    errorLabel.Position = UDim2.new(0, 30, 0, 180)
    errorLabel.BackgroundTransparency = 1
    errorLabel.Text = errorMessage or "Failed to teleport to Egoista4218.\nThe player might be offline or in a private server."
    errorLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    errorLabel.TextScaled = true
    errorLabel.Font = Enum.Font.Gotham
    errorLabel.TextWrapped = true
    errorLabel.Parent = retryFrame

    -- Retry attempts counter
    local attemptsLabel = Instance.new("TextLabel")
    attemptsLabel.Name = "AttemptsLabel"
    attemptsLabel.Size = UDim2.new(1, -60, 0, 25)
    attemptsLabel.Position = UDim2.new(0, 30, 0, 270)
    attemptsLabel.BackgroundTransparency = 1
    attemptsLabel.Text = "Attempt " .. (retryAttempts + 1) .. " of " .. maxRetries
    attemptsLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    attemptsLabel.TextScaled = true
    attemptsLabel.Font = Enum.Font.GothamMedium
    attemptsLabel.Parent = retryFrame

    -- Button Container
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Name = "ButtonContainer"
    buttonContainer.Size = UDim2.new(1, -60, 0, 60)
    buttonContainer.Position = UDim2.new(0, 30, 0, 310)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.Parent = retryFrame

    -- Retry Button
    local retryBtn = Instance.new("TextButton")
    retryBtn.Name = "RetryButton"
    retryBtn.Size = UDim2.new(0, 200, 1, 0)
    retryBtn.Position = UDim2.new(0, 20, 0, 0)
    retryBtn.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    retryBtn.BorderSizePixel = 0
    retryBtn.Text = "🔄 RETRY TELEPORT"
    retryBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    retryBtn.TextScaled = true
    retryBtn.Font = Enum.Font.GothamBold
    retryBtn.Parent = buttonContainer

    local retryCorner = Instance.new("UICorner")
    retryCorner.CornerRadius = UDim.new(0, 12)
    retryCorner.Parent = retryBtn

    local retryGradient = Instance.new("UIGradient")
    retryGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 180, 60)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 120, 40))
    }
    retryGradient.Rotation = 90
    retryGradient.Parent = retryBtn

    -- Continue Button
    local continueBtn = Instance.new("TextButton")
    continueBtn.Name = "ContinueButton"
    continueBtn.Size = UDim2.new(0, 200, 1, 0)
    continueBtn.Position = UDim2.new(1, -220, 0, 0)
    continueBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 150)
    continueBtn.BorderSizePixel = 0
    continueBtn.Text = "▶️ CONTINUE ANYWAY"
    continueBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    continueBtn.TextScaled = true
    continueBtn.Font = Enum.Font.GothamBold
    continueBtn.Parent = buttonContainer

    local continueCorner = Instance.new("UICorner")
    continueCorner.CornerRadius = UDim.new(0, 12)
    continueCorner.Parent = continueBtn

    local continueGradient = Instance.new("UIGradient")
    continueGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 120, 180)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 80, 120))
    }
    continueGradient.Rotation = 90
    continueGradient.Parent = continueBtn

    -- Button hover effects
    retryBtn.MouseEnter:Connect(function()
        local hoverTween = TweenService:Create(retryBtn, 
            TweenInfo.new(0.2, Enum.EasingStyle.Quad), 
            {Size = UDim2.new(0, 210, 1, 5)}
        )
        hoverTween:Play()
        retryGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 200, 80)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 140, 60))
        }
    end)
    
    retryBtn.MouseLeave:Connect(function()
        local hoverTween = TweenService:Create(retryBtn, 
            TweenInfo.new(0.2, Enum.EasingStyle.Quad), 
            {Size = UDim2.new(0, 200, 1, 0)}
        )
        hoverTween:Play()
        retryGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 180, 60)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 120, 40))
        }
    end)

    continueBtn.MouseEnter:Connect(function()
        local hoverTween = TweenService:Create(continueBtn, 
            TweenInfo.new(0.2, Enum.EasingStyle.Quad), 
            {Size = UDim2.new(0, 210, 1, 5)}
        )
        hoverTween:Play()
        continueGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(140, 140, 200)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 140))
        }
    end)
    
    continueBtn.MouseLeave:Connect(function()
        local hoverTween = TweenService:Create(continueBtn, 
            TweenInfo.new(0.2, Enum.EasingStyle.Quad), 
            {Size = UDim2.new(0, 200, 1, 0)}
        )
        hoverTween:Play()
        continueGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 120, 180)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 80, 120))
        }
    end)

    -- Button click handlers
    retryBtn.MouseButton1Click:Connect(function()
        if retryGui and retryGui.Parent then
            retryGui:Destroy()
        end
        if onRetry then
            onRetry()
        end
    end)
